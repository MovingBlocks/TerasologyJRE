/*
 * Copyright 2019 MovingBlocks
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "base"
    id "maven-publish"
    id "de.undercouch.download" version "3.4.3"
}

group = "org.terasology.jre"
version = "1.0.0"

ext {
    jreVersion = "8u212"
    publishUrl = "http://artifactory.terasology.org/artifactory/libs-release-local"
}

enum JRE {
    Linux32("linux-i586","tar.gz"),
    Linux64("linux-amd64","tar.gz"),
    MacOS("macos-amd64","zip"),
    Windows32("windows-i586","zip"),
    Windows64("windows-amd64","zip");

    String downloadArtifact
    String archiveExtension

    public URL getDownloadURL(String jreVersion) {
        def baseUrl = "https://download.bell-sw.com/java/${jreVersion}/bellsoft-jre${jreVersion}"
        def downloadUrl = new URL("${baseUrl}-${this.downloadArtifact}")
        println downloadUrl

        return downloadUrl
    }

    public File getTargetArchive(File projectDir) {
        def targetArchive = new File("${projectDir}/jres/${this.name().toLowerCase()}.${this.archiveExtension}")

        return targetArchive
    }

    JRE(String filename, String extension) {
        this.downloadArtifact = "${filename}.${extension}"
        this.archiveExtension = extension
    }
}

task downloadJreAll {
    group "Download"
    description "Downloads JRE for all platforms"
}

JRE.each { arch ->

    def jreDownloadTask = task("downloadJre${arch}", type: Download) {
        group "Download"
        description "Downloads JRE for ${arch}"

        // Uses Bellsoft Liberica JRE

        src arch.getDownloadURL(jreVersion)
        dest arch.getTargetArchive(projectDir)
        overwrite false
        onlyIfModified true
    }

    downloadJreAll.dependsOn jreDownloadTask
    
    publishing.publications {
        "jre${arch}"(MavenPublication) {
            artifact(arch.getTargetArchive(projectDir)) {
                builtBy jreDownloadTask
            }
            artifactId "jre${jreVersion}-${arch.name().toLowerCase()}"
            // TODO: customize POM
        }
    }
}

publishing {
    repositories {
        maven {
            if (project.hasProperty('artifactoryUser') && project.hasProperty('artifactoryPass')) {
                credentials {
                    username artifactoryUser
                    password artifactoryPass
                }
            }
            url publishUrl
        }
    }
}
